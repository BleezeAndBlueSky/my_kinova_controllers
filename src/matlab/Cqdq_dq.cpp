//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
//
// Cqdq_dq.cpp
//
// Code generation for function 'Cqdq_dq'
//

// Include files
#include "matlab/Cqdq_dq.h"
#include "matlab/Cqdq_dq1.h"
#include "matlab/Cqdq_dq2.h"
#include "matlab/Cqdq_dq3.h"
#include "matlab/Cqdq_dq4.h"
#include "matlab/Cqdq_dq5.h"
#include "matlab/Cqdq_dq6.h"
#include <cmath>

// Function Definitions
void Cqdq_dq(double dth1, double dth2, double dth3, double dth4, double dth5,
             double dth6, double th1, double th2, double th3, double th4,
             double th5, double th6, double res[6])
{
  double b_dth1[336];
  double b_t702_tmp;
  double c_t702_tmp;
  double t10;
  double t101;
  double t102;
  double t103;
  double t105;
  double t11;
  double t110;
  double t111;
  double t112;
  double t113;
  double t114;
  double t116;
  double t12;
  double t120;
  double t121;
  double t123;
  double t125;
  double t126;
  double t13;
  double t130;
  double t136;
  double t137;
  double t138;
  double t139;
  double t140;
  double t141;
  double t142;
  double t143;
  double t144;
  double t145;
  double t146;
  double t147;
  double t148;
  double t149;
  double t150;
  double t151;
  double t157;
  double t158;
  double t160;
  double t161;
  double t165;
  double t166;
  double t17;
  double t174;
  double t188;
  double t189;
  double t19;
  double t2;
  double t20;
  double t203;
  double t207;
  double t228;
  double t23;
  double t232;
  double t232_tmp;
  double t24;
  double t241;
  double t243;
  double t25;
  double t252;
  double t26;
  double t27;
  double t270;
  double t274;
  double t277;
  double t280;
  double t29;
  double t290;
  double t296;
  double t3;
  double t30;
  double t31;
  double t310;
  double t312;
  double t315;
  double t32;
  double t320;
  double t324;
  double t330;
  double t335;
  double t338;
  double t34;
  double t350;
  double t363;
  double t365;
  double t37;
  double t38;
  double t389;
  double t398;
  double t4;
  double t439;
  double t47;
  double t49;
  double t5;
  double t50;
  double t51;
  double t583;
  double t583_tmp;
  double t6;
  double t60;
  double t61;
  double t64;
  double t65;
  double t66;
  double t67;
  double t68;
  double t69;
  double t7;
  double t702;
  double t702_tmp;
  double t71;
  double t769;
  double t78;
  double t79;
  double t8;
  double t85;
  double t86;
  double t9;
  double t91;
  double t95;
  double t96;
  double t98;
  // Cqdq_dq6
  //     OUT1 = Cqdq_dq6(DTH1,DTH2,DTH3,DTH4,DTH5,DTH6,TH1,TH2,TH3,TH4,TH5,TH6)
  //     This function was generated by the Symbolic Math Toolbox version 9.0.
  //     01-Dec-2021 01:52:56
  t2 = std::cos(th1);
  t3 = std::cos(th2);
  t4 = std::cos(th3);
  t5 = std::cos(th4);
  t6 = std::cos(th5);
  t7 = std::cos(th6);
  t8 = std::sin(th1);
  t9 = std::sin(th2);
  t10 = std::sin(th3);
  t11 = std::sin(th4);
  t12 = std::sin(th5);
  t13 = std::sin(th6);
  t17 = t3 * t4;
  t19 = t3 * t10;
  t20 = t4 * t9;
  t23 = t9 * t10;
  t34 = t3 * 0.41;
  t37 = t9 * 0.41;
  t38 = t8 * 0.0064;
  t24 = t2 * t23;
  t25 = t8 * t19;
  t26 = t8 * t20;
  t27 = t8 * t23;
  t29 = t2 * t17;
  t30 = t2 * t19;
  t31 = t2 * t20;
  t32 = t8 * t17;
  t47 = t17 + t23;
  t49 = t19 + -t20;
  t50 = t6 * t47;
  t51 = t12 * t47;
  t60 = t24 + t29;
  t61 = t27 + t32;
  t4 = t7 * t11;
  t66 = t4 * t47;
  t10 = t11 * t13;
  t67 = t10 * t47;
  t71 = t25 * 0.1059;
  t85 = t30 * 0.3143;
  t86 = t31 * 0.3143;
  t64 = t5 * t50;
  t65 = t5 * t51;
  t68 = t6 * t49;
  t69 = t12 * t49;
  t78 = t30 + t2 * -t20;
  t79 = t25 + -t26;
  t91 = t6 * t60;
  t95 = t6 * t61;
  t98 = t5 * t7 * t49;
  t102 = t5 * t13 * t49;
  t103 = t4 * t49;
  t105 = t10 * t49;
  t203 = t66 * 0.000118;
  t228 = t67 * 3.0E-6;
  t252 = t50 * 0.135698;
  t96 = t5 * t68;
  t101 = t5 * t69;
  t110 = t6 * t78;
  t111 = t12 * t78;
  t112 = t4 * t68;
  t113 = t6 * t79;
  t114 = t10 * t68;
  t116 = t12 * t79;
  t121 = t4 * t78;
  t123 = t10 * t78;
  t126 = t4 * t79;
  t4 = t10 * t79;
  t130 = t5 * t8 + t11 * t60;
  t10 = t2 * t11 + t5 * t61;
  t3 = t105 * 0.000281;
  t188 = t65 * 0.000609;
  t189 = t68 * 0.000609;
  t207 = t103 * 0.011402;
  t270 = t102 * 3.0E-6;
  t274 = t105 * 3.0E-6;
  t310 = t91 * 0.135698;
  t312 = t95 * 0.135698;
  t120 = t5 * t111;
  t125 = t5 * t116;
  t136 = t8 * t11 + -(t5 * t60);
  t137 = t2 * t5 + -(t11 * t61);
  t138 = t7 * t130;
  t139 = t6 * t10;
  t140 = t7 * t10;
  t141 = t13 * t130;
  t142 = t12 * t10;
  t143 = t13 * t10;
  t157 = t51 + t96;
  t241 = t123 * 0.000281;
  t243 = t4 * 0.000281;
  t277 = t113 * 0.000118;
  t280 = t126 * 0.011402;
  t290 = t121 * 0.011402;
  t296 = t112 * 3.0E-6;
  t315 = t101 * 0.135698;
  t320 = t123 * 3.0E-6;
  t324 = t4 * 3.0E-6;
  t335 = t110 * 0.135698;
  t338 = t113 * 0.135698;
  t702_tmp = t64 - t69;
  b_t702_tmp = t13 * t702_tmp;
  c_t702_tmp = t7 * t702_tmp;
  t702 =
      ((((t67 * 0.000281 + t66 * 0.011402) + t65 * 0.135698) + t68 * 0.135698) +
       c_t702_tmp * -0.000281) +
      b_t702_tmp * 0.011402;
  t144 = t6 * t138;
  t145 = t6 * t141;
  t146 = t6 * t136;
  t147 = t7 * t136;
  t148 = t12 * t136;
  t149 = t7 * t137;
  t150 = t13 * t136;
  t151 = t13 * t137;
  t158 = t50 + -t101;
  t160 = t7 * t157;
  t161 = t13 * t157;
  t165 = t12 * t60 + t5 * t110;
  t166 = t12 * t61 + t5 * t113;
  t174 = t113 + t142;
  t232_tmp = t116 - t139;
  t232 = t13 * t232_tmp;
  t330 = t141 * 0.000281;
  t350 = t138 * 0.011402;
  t363 = t120 * 0.135698;
  t365 = t125 * 0.135698;
  t389 = t138 * 3.0E-6;
  t398 = t143 * 3.0E-6;
  t439 = t142 * 0.135698;
  t583_tmp = t11 * t69;
  t583 =
      (((t583_tmp * 0.000609 + -(t98 * 0.000118)) + t270) + t114 * 0.000118) +
      t296;
  t769 = (t19 * 0.1059 + -(t20 * 0.1059)) + t702;
  t20 = (t19 * 0.3143 + -(t20 * 0.3143)) + t702;
  b_dth1[0] = dth1;
  b_dth1[1] = dth2;
  b_dth1[2] = dth3;
  b_dth1[3] = dth4;
  b_dth1[4] = dth5;
  b_dth1[5] = dth6;
  b_dth1[6] = t105;
  b_dth1[7] = -(t31 * 0.1059);
  b_dth1[8] = -t85;
  b_dth1[9] = -t86;
  b_dth1[10] = t11;
  b_dth1[11] = t110;
  b_dth1[12] = t116;
  b_dth1[13] = t12;
  b_dth1[14] = t121;
  b_dth1[15] = t123;
  b_dth1[16] = t126;
  b_dth1[17] = t4;
  b_dth1[18] = t13;
  b_dth1[19] = t130;
  b_dth1[20] = t10;
  b_dth1[21] = -t123;
  b_dth1[22] = -t4;
  b_dth1[23] = t136;
  b_dth1[24] = t137;
  b_dth1[25] = t138;
  b_dth1[26] = t139;
  b_dth1[27] = t2 * t2;
  b_dth1[28] = t140;
  b_dth1[29] = t141;
  b_dth1[30] = t143;
  b_dth1[31] = t144;
  b_dth1[32] = t148;
  b_dth1[33] = t8 * t8;
  b_dth1[34] = t150;
  b_dth1[35] = -t144;
  b_dth1[36] = t6 * t149;
  b_dth1[37] = t6 * t151;
  b_dth1[38] = t65 + t68;
  b_dth1[39] = t157;
  b_dth1[40] = t158;
  b_dth1[41] = t160;
  b_dth1[42] = t102 + t112;
  b_dth1[43] = t98 + -t114;
  b_dth1[44] = t91 + -t120;
  b_dth1[45] = t95 + -t125;
  b_dth1[46] = t7 * t165;
  b_dth1[47] = t13 * t165;
  b_dth1[48] = t7 * t166;
  b_dth1[49] = t13 * t166;
  b_dth1[50] = t174;
  b_dth1[51] = t111 + t146;
  b_dth1[52] = t51 * 0.000609;
  b_dth1[53] = t51 * 0.000118;
  b_dth1[54] = -(t50 * 0.000609);
  b_dth1[55] = t103 * 0.000281;
  b_dth1[56] = t3;
  b_dth1[57] = t188;
  b_dth1[58] = t189;
  b_dth1[59] = -(t50 * 0.000118);
  b_dth1[60] = -t3;
  b_dth1[61] = t50 * 3.0E-6;
  b_dth1[62] = t2;
  b_dth1[63] = t51 * 3.0E-6;
  b_dth1[64] = t203;
  b_dth1[65] = t207;
  b_dth1[66] = t96 * 0.000609;
  b_dth1[67] = t101 * 0.000609;
  b_dth1[68] = -t207;
  b_dth1[69] = -(t91 * 0.000609);
  b_dth1[70] = t67 + -t7 * t702_tmp;
  b_dth1[71] = t103 + t161;
  b_dth1[72] = -(t105 * 0.011402);
  b_dth1[73] = -(t95 * 0.000609);
  b_dth1[74] = t103 * 0.000587;
  b_dth1[75] = t228;
  b_dth1[76] = t103 * 0.000369;
  b_dth1[77] = t105 * 0.000587;
  b_dth1[78] = t232;
  b_dth1[79] = t96 * 0.000118;
  b_dth1[80] = t101 * 0.000118;
  b_dth1[81] = t103 * 0.000118;
  b_dth1[82] = t105 * 0.000118;
  b_dth1[83] = t241;
  b_dth1[84] = t243;
  b_dth1[85] = t111 * 0.000609;
  b_dth1[86] = t113 * 0.000609;
  b_dth1[87] = t116 * 0.000609;
  b_dth1[88] = -(t91 * 0.000118);
  b_dth1[89] = -(t105 * 0.000369);
  b_dth1[90] = t252;
  b_dth1[91] = -(t95 * 0.000118);
  b_dth1[92] = t51 * 0.135698;
  b_dth1[93] = -t241;
  b_dth1[94] = -t243;
  b_dth1[95] = -(t110 * 0.000609);
  b_dth1[96] = t91 * 3.0E-6;
  b_dth1[97] = t95 * 3.0E-6;
  b_dth1[98] = t96 * 3.0E-6;
  b_dth1[99] = t103 * 3.0E-6;
  b_dth1[100] = t110 * 0.000118;
  b_dth1[101] = t274;
  b_dth1[102] = t111 * 0.000118;
  b_dth1[103] = -t252;
  b_dth1[104] = t277;
  b_dth1[105] = t280;
  b_dth1[106] = t120 * 0.000609;
  b_dth1[107] = t125 * 0.000609;
  b_dth1[108] = -(t101 * 3.0E-6);
  b_dth1[109] = -t274;
  b_dth1[110] = -t277;
  b_dth1[111] = -(t116 * 0.000118);
  b_dth1[112] = t290;
  b_dth1[113] = -t280;
  b_dth1[114] = t121 * 0.000369;
  b_dth1[115] = t123 * 0.000587;
  b_dth1[116] = t111 * 3.0E-6;
  b_dth1[117] = t126 * 0.000369;
  b_dth1[118] = t113 * 3.0E-6;
  b_dth1[119] = t4 * 0.000587;
  b_dth1[120] = t120 * 0.000118;
  b_dth1[121] = t121 * 0.000118;
  b_dth1[122] = t125 * 0.000118;
  b_dth1[123] = t126 * 0.000118;
  b_dth1[124] = t145 + t147;
  b_dth1[125] = -t290;
  b_dth1[126] = -(t110 * 3.0E-6);
  b_dth1[127] = t310;
  b_dth1[128] = t312;
  b_dth1[129] = -(t116 * 3.0E-6);
  b_dth1[130] = t96 * 0.135698;
  b_dth1[131] = t315;
  b_dth1[132] = t143 * 0.000281;
  b_dth1[133] = t121 * 3.0E-6;
  b_dth1[134] = t320;
  b_dth1[135] = t126 * 3.0E-6;
  b_dth1[136] = -t310;
  b_dth1[137] = t324;
  b_dth1[138] = -t312;
  b_dth1[139] = -t315;
  b_dth1[140] = t330;
  b_dth1[141] = -(t120 * 3.0E-6);
  b_dth1[142] = -t320;
  b_dth1[143] = -(t125 * 3.0E-6);
  b_dth1[144] = t335;
  b_dth1[145] = -t324;
  b_dth1[146] = t111 * 0.135698;
  b_dth1[147] = t338;
  b_dth1[148] = t34;
  b_dth1[149] = -(t138 * 0.000281);
  b_dth1[150] = -t330;
  b_dth1[151] = t151 * 0.000281;
  t274 = t12 * t130;
  b_dth1[152] = t274 * 0.000609;
  b_dth1[153] = t142 * 0.000609;
  b_dth1[154] = -t335;
  b_dth1[155] = -t338;
  b_dth1[156] = -(t116 * 0.135698);
  b_dth1[157] = t144 * 0.000281;
  b_dth1[158] = t2 * 0.0064;
  b_dth1[159] = t350;
  b_dth1[160] = t140 * 0.011402;
  b_dth1[161] = t141 * 0.011402;
  b_dth1[162] = t149 * 0.000281;
  b_dth1[163] = t150 * 0.000281;
  b_dth1[164] = -(t139 * 0.000609);
  b_dth1[165] = t138 * 0.000369;
  b_dth1[166] = t141 * 0.000587;
  b_dth1[167] = t2 / 1000.0;
  b_dth1[168] = t140 * 0.000369;
  b_dth1[169] = t141 * 0.000369;
  b_dth1[170] = t143 * 0.000587;
  b_dth1[171] = t363;
  b_dth1[172] = t365;
  b_dth1[173] = t139 * 0.000118;
  b_dth1[174] = t274 * 0.000118;
  b_dth1[175] = t140 * 0.000118;
  b_dth1[176] = t141 * 0.000118;
  b_dth1[177] = -t350;
  b_dth1[178] = t146 * 0.000609;
  b_dth1[179] = t148 * 0.000609;
  t207 = t12 * t137;
  b_dth1[180] = t207 * 0.000609;
  b_dth1[181] = -(t138 * 0.000587);
  b_dth1[182] = -t363;
  b_dth1[183] = -(t138 * 0.000118);
  b_dth1[184] = t38;
  b_dth1[185] = -t365;
  b_dth1[186] = -(t142 * 0.000118);
  b_dth1[187] = t145 * 0.011402;
  b_dth1[188] = t147 * 0.011402;
  b_dth1[189] = t149 * 0.011402;
  b_dth1[190] = t151 * 0.011402;
  b_dth1[191] = t144 * 0.000587;
  b_dth1[192] = t145 * 0.000369;
  b_dth1[193] = t389;
  b_dth1[194] = t8 / 1000.0;
  b_dth1[195] = t139 * 3.0E-6;
  b_dth1[196] = t140 * 3.0E-6;
  b_dth1[197] = t141 * 3.0E-6;
  b_dth1[198] = t147 * 0.000369;
  b_dth1[199] = t149 * 0.000587;
  b_dth1[200] = t150 * 0.000587;
  b_dth1[201] = t142 * 3.0E-6;
  b_dth1[202] = t398;
  b_dth1[203] = t149 * 0.000369;
  b_dth1[204] = t151 * 0.000587;
  b_dth1[205] = t145 * 0.000118;
  b_dth1[206] = t151 * 0.000369;
  b_dth1[207] = t146 * 0.000118;
  b_dth1[208] = t147 * 0.000118;
  b_dth1[209] = t148 * 0.000118;
  b_dth1[210] = t149 * 0.000118;
  b_dth1[211] = t207 * 0.000118;
  b_dth1[212] = t151 * 0.000118;
  b_dth1[213] = -t37;
  b_dth1[214] = -t389;
  b_dth1[215] = -(t274 * 3.0E-6);
  b_dth1[216] = -t398;
  b_dth1[217] = -t38;
  b_dth1[218] = t145 * 3.0E-6;
  b_dth1[219] = t146 * 3.0E-6;
  b_dth1[220] = t147 * 3.0E-6;
  b_dth1[221] = t148 * 3.0E-6;
  b_dth1[222] = t149 * 3.0E-6;
  b_dth1[223] = t150 * 3.0E-6;
  b_dth1[224] = t2 * t34;
  b_dth1[225] = t151 * 3.0E-6;
  b_dth1[226] = t144 * 3.0E-6;
  b_dth1[227] = t139 * 0.135698;
  b_dth1[228] = t274 * 0.135698;
  b_dth1[229] = -(t207 * 3.0E-6);
  b_dth1[230] = t439;
  b_dth1[231] = t2 * t37;
  b_dth1[232] = -t439;
  b_dth1[233] = t160 * 0.000281;
  b_dth1[234] = t161 * 0.000281;
  b_dth1[235] = t146 * 0.135698;
  b_dth1[236] = t8 * t34;
  b_dth1[237] = t148 * 0.135698;
  b_dth1[238] = t207 * 0.135698;
  b_dth1[239] = t160 * 0.011402;
  t274 = t7 * t158;
  b_dth1[240] = t274 * 0.000281;
  b_dth1[241] = t161 * 0.011402;
  b_dth1[242] = t160 * 0.000587;
  b_dth1[243] = t160 * 0.000369;
  b_dth1[244] = t161 * 0.000587;
  b_dth1[245] = t161 * 0.000369;
  b_dth1[246] = t160 * 0.000118;
  b_dth1[247] = t161 * 0.000118;
  t207 = t13 * t158;
  b_dth1[248] = t207 * 0.011402;
  b_dth1[249] = t47;
  b_dth1[250] = t160 * 3.0E-6;
  b_dth1[251] = t274 * 0.000587;
  b_dth1[252] = t161 * 3.0E-6;
  b_dth1[253] = t207 * 0.000369;
  b_dth1[254] = t207 * 0.000118;
  b_dth1[255] = t8 * t9 * -0.41;
  b_dth1[256] = t274 * 3.0E-6;
  b_dth1[257] = t207 * 3.0E-6;
  b_dth1[258] = t49;
  b_dth1[259] = t5;
  b_dth1[260] = t151 + -t7 * t232_tmp;
  t274 = t7 * t174;
  b_dth1[261] = t274 * 0.000281;
  b_dth1[262] = t149 + t232;
  t207 = t7 * t232_tmp;
  b_dth1[263] = t207 * -0.000281;
  t3 = t13 * t174;
  b_dth1[264] = t3 * 0.011402;
  b_dth1[265] = t232 * -0.000281;
  b_dth1[266] = t17 * 0.1059;
  b_dth1[267] = t207 * 0.000281;
  b_dth1[268] = t274 * 0.000587;
  b_dth1[269] = t3 * 0.000369;
  b_dth1[270] = t3 * 0.000118;
  t4 = t110 - t148;
  t10 = t7 * t4;
  b_dth1[271] = t10 * -0.000281;
  b_dth1[272] = t207 * -0.011402;
  b_dth1[273] = t232 * -0.011402;
  b_dth1[274] = t17 * 0.3143;
  b_dth1[275] = t232 * 0.011402;
  b_dth1[276] = t274 * 3.0E-6;
  b_dth1[277] = t207 * -0.000587;
  b_dth1[278] = t3 * 3.0E-6;
  b_dth1[279] = t207 * -0.000369;
  b_dth1[280] = t232 * -0.000587;
  b_dth1[281] = t207 * -0.000118;
  b_dth1[282] = t232 * -0.000118;
  b_dth1[283] = t232 * 0.000369;
  t274 = t13 * t4;
  b_dth1[284] = t274 * 0.011402;
  b_dth1[285] = t207 * -3.0E-6;
  b_dth1[286] = t232 * -3.0E-6;
  b_dth1[287] = t10 * 0.000587;
  b_dth1[288] = t274 * 0.000369;
  b_dth1[289] = t232 * 3.0E-6;
  b_dth1[290] = t274 * 0.000118;
  b_dth1[291] = t10 * -3.0E-6;
  b_dth1[292] = t274 * -3.0E-6;
  b_dth1[293] = t10 * 3.0E-6;
  b_dth1[294] = t23 * 0.1059;
  b_dth1[295] = (((t102 * 0.000281 + t112 * 0.000281) + t98 * 0.011402) +
                 -(t114 * 0.011402)) +
                -(t583_tmp * 0.135698);
  b_dth1[296] = (((t98 * 0.000369 + -(t583_tmp * 0.000118)) + t270) +
                 -(t114 * 0.000369)) +
                t296;
  b_dth1[297] = (((t102 * 0.000587 + t112 * 0.000587) + t98 * 3.0E-6) +
                 t583_tmp * 3.0E-6) +
                -(t114 * 3.0E-6);
  b_dth1[298] = t23 * 0.3143;
  b_dth1[299] = t60;
  b_dth1[300] = t61;
  b_dth1[301] = t158 * t583;
  b_dth1[302] = t64;
  b_dth1[303] = t174 * t583;
  b_dth1[304] = t66;
  b_dth1[305] = -t583 * t4;
  b_dth1[306] = t69;
  b_dth1[307] = t7;
  b_dth1[308] = t24 * 0.1059;
  b_dth1[309] = ((((t66 * 0.000369 + t65 * 0.000118) + t68 * 0.000118) + t228) +
                 b_t702_tmp * 0.000369) +
                c_t702_tmp * -3.0E-6;
  b_dth1[310] = t71;
  b_dth1[311] = t26 * 0.1059;
  b_dth1[312] =
      ((((t67 * 0.000587 + t66 * 3.0E-6) + -(t65 * 3.0E-6)) + -(t68 * 3.0E-6)) +
       c_t702_tmp * -0.000587) +
      b_t702_tmp * 3.0E-6;
  b_dth1[313] = t24 * 0.3143;
  b_dth1[314] = t25 * 0.3143;
  b_dth1[315] = t130 * t702;
  b_dth1[316] = t137 * t702;
  b_dth1[317] = t27 * 0.1059;
  b_dth1[318] = t769;
  b_dth1[319] = t27 * 0.3143;
  b_dth1[320] = t20;
  b_dth1[321] = t78;
  b_dth1[322] = t79;
  b_dth1[323] =
      -t158 * (((((t188 + t189) + t203) - t228) + c_t702_tmp * 3.0E-6) +
               b_t702_tmp * 0.000118);
  b_dth1[324] = -t37 + t20;
  b_dth1[325] = t8;
  b_dth1[326] = t29 * 0.1059;
  b_dth1[327] = t78 * t769;
  b_dth1[328] = t29 * 0.3143;
  b_dth1[329] = t30 * 0.1059;
  b_dth1[330] = t32 * 0.1059;
  b_dth1[331] = t85;
  b_dth1[332] = t86;
  b_dth1[333] = t32 * 0.3143;
  b_dth1[334] = -t71;
  b_dth1[335] = -(t26 * 0.3143);
  res[0] = Cqdq_dq1(dth1, dth2, dth3, dth4, dth5, dth6, th1, th2, th3, th4, th5,
                    th6);
  res[1] = Cqdq_dq2(dth1, dth2, dth3, dth4, dth5, dth6, th1, th2, th3, th4, th5,
                    th6);
  res[2] = Cqdq_dq3(dth1, dth2, dth3, dth4, dth5, dth6, th1, th2, th3, th4, th5,
                    th6);
  res[3] = Cqdq_dq4(dth1, dth2, dth3, dth4, dth5, dth6, th1, th2, th3, th4, th5,
                    th6);
  res[4] = Cqdq_dq5(dth1, dth2, dth3, dth4, dth5, dth6, th1, th2, th3, th4, th5,
                    th6);
  res[5] = c_ft_1(b_dth1);
}

// End of code generation (Cqdq_dq.cpp)
