//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
//
// Mq_s.cpp
//
// Code generation for function 'Mq_s'
//

// Include files
#include "matlab/Mq_s.h"
#include <cmath>

// Function Declarations
static void ft_1(const double ct[280], double D[36]);

// Function Definitions
static void ft_1(const double ct[280], double D[36])
{
  double ct_idx_1;
  double ct_idx_102;
  double ct_idx_112;
  double ct_idx_113;
  double ct_idx_126;
  double ct_idx_133_tmp;
  double ct_idx_134_tmp;
  double ct_idx_136_tmp;
  double ct_idx_160;
  double ct_idx_163;
  double ct_idx_164;
  double ct_idx_165;
  double ct_idx_165_tmp;
  double ct_idx_170;
  double ct_idx_174;
  double ct_idx_179;
  double ct_idx_180;
  double ct_idx_181;
  double ct_idx_182;
  double ct_idx_185_tmp;
  double ct_idx_186_tmp;
  double ct_idx_187;
  double ct_idx_188;
  double ct_idx_194;
  double ct_idx_195;
  double ct_idx_197;
  double ct_idx_1_tmp;
  double ct_idx_2;
  double ct_idx_200;
  double ct_idx_205;
  double ct_idx_208_tmp;
  double ct_idx_214;
  double ct_idx_216;
  double ct_idx_222;
  double ct_idx_227;
  double ct_idx_228;
  double ct_idx_229;
  double ct_idx_232;
  double ct_idx_243;
  double ct_idx_244;
  double ct_idx_245;
  double ct_idx_246;
  double ct_idx_247;
  double ct_idx_248;
  double ct_idx_251;
  double ct_idx_253;
  double ct_idx_255;
  double ct_idx_256;
  double ct_idx_257;
  double ct_idx_258;
  double ct_idx_259;
  double ct_idx_260;
  double ct_idx_261;
  double ct_idx_262;
  double ct_idx_263;
  double ct_idx_265;
  double ct_idx_266;
  double ct_idx_267;
  double ct_idx_270;
  double ct_idx_289;
  double ct_idx_290;
  double ct_idx_294;
  double ct_idx_295;
  double ct_idx_296;
  double ct_idx_297;
  double ct_idx_3;
  double ct_idx_98;
  double ct_idx_99;
  double t1004;
  double t276;
  double t299;
  double t315;
  double t316;
  double t381;
  double t433;
  double t471;
  double t473;
  double t475;
  double t477;
  double t484;
  double t543;
  double t564;
  double t566;
  double t569;
  double t573;
  double t576;
  double t577;
  double t578;
  double t579;
  double t580;
  double t581;
  double t583;
  double t584;
  double t587;
  double t588;
  double t593;
  double t595;
  double t615;
  double t619;
  double t626;
  double t627;
  double t634;
  double t664;
  double t665;
  double t665_tmp;
  double t674;
  double t675;
  double t676;
  double t677;
  double t680;
  double t681;
  double t685;
  double t686;
  double t690;
  double t694;
  double t695;
  double t696;
  double t697;
  double t698;
  double t698_tmp;
  double t701;
  double t704;
  double t705;
  double t707;
  double t707_tmp;
  double t715;
  double t716;
  double t717;
  double t717_tmp;
  double t718;
  double t724;
  double t726;
  double t739;
  double t740;
  double t742;
  double t743;
  double t749;
  double t750;
  double t753;
  double t799;
  double t807;
  double t809;
  double t811;
  double t812;
  double t830;
  double t831;
  double t837;
  double t839;
  double t843;
  double t844;
  double t847;
  double t865;
  double t865_tmp;
  double t876;
  double t877;
  double t878;
  double t885;
  double t909;
  double t911;
  double t913;
  double t914;
  double t915;
  double t966;
  double t967;
  double t970;
  double t974;
  double t976;
  double t976_tmp;
  double t978;
  double t982;
  t578 = ((ct[32] + ct[233]) + ct[72]) + ct[111];
  t579 = ((ct[39] + ct[209]) + ct[70]) + ct[104];
  t580 = ct[59] * ct[221];
  t581 = ((ct[29] + ct[255]) + ct[63]) + ct[137];
  t626 = (((ct[53] + ct[173]) + ct[78]) + ct[80]) + ct[128];
  t627 = (((ct[52] + ct[163]) + ct[75]) + ct[79]) + ct[126];
  t634 =
      (((((ct[250] + ct[263]) + ct[12]) + ct[13]) + ct[24]) + ct[86]) + ct[87];
  t694 = (((ct[94] + ct[100]) + ct[101]) + ct[121]) + ct[138];
  t799 = ct[158] + ct[267];
  t276 = ct[6] + ct[14];
  t299 = ct[3] + ct[42];
  t381 = ct[21] + ct[58];
  t433 = ct[45] * 0.011402;
  t477 = ct[45] + ct[98];
  t484 = ct[44] + ct[110];
  t543 = ct[89] + ct[108];
  t564 = ct[114] + ct[147];
  t566 = ct[124] + ct[148];
  t576 = ct[109] + ct[175];
  t577 = ct[116] + ct[174];
  t584 = ((ct[8] + ct[41]) + ct[81]) + ct[92];
  t677 = ((ct[95] + ct[107]) + ct[170]) + ct[172];
  t680 = (ct[176] + ct[179]) + ct[213];
  t681 = (ct[177] + ct[178]) + ct[211];
  t588 = ct[130] + ct[185];
  t695 = (((((((t588 + ct[200]) + ct[270]) + ct[279]) + ct[38]) + ct[55]) +
           ct[64]) +
          ct[105]) +
         ct[140];
  t315 = ct[256] * t299;
  t316 = ct[15] * t299;
  t473 = ct[60] * t276;
  t569 = ct[115] + ct[42] * 0.001685;
  t573 = ct[123] + ct[43] * 0.000609;
  t583 = ((ct[34] + ct[218]) + -ct[66]) + -ct[151];
  t593 = ct[45] * 0.000587 + ct[190];
  t595 = ct[44] * 0.000369 + ct[110] * 0.000369;
  t615 = ((ct[50] + ct[65]) + ct[99]) + -ct[136];
  t911 = ct[271] + ct[278];
  t664 = ((((t911 + ct[40]) + ct[51]) + -ct[57]) + ct[97]) + ct[127];
  t665_tmp = ct[269] + ct[274];
  t665 = ((((t665_tmp + ct[36]) + ct[48]) + -ct[56]) + ct[96]) + ct[125];
  t696 = ((((((((ct[146] + ct[166]) + ct[226]) + ct[277]) + ct[1]) + ct[31]) +
            ct[49]) +
           ct[42] / 1.0E+6) +
          ct[112]) +
         ct[43] * 0.046429;
  t707_tmp = ct[2] - ct[43];
  t707 = ((ct[144] + ct[42] * 0.135698) + ct[256] * t707_tmp * -0.000281) +
         ct[15] * t707_tmp * 0.011402;
  t715 = (((ct[155] + ct[159]) + ct[154] * ct[235]) + ct[164]) + ct[168];
  t716 = (ct[204] + ct[189] * ct[191] * ct[197]) + -ct[232];
  t717_tmp = ct[4] * ct[191];
  t717 = (ct[205] + t717_tmp * ct[195]) + -ct[231];
  t740 = (ct[223] + ct[11] * ct[194]) + ct[19] * ct[195];
  t742 = (ct[222] + ct[10] * ct[193]) + ct[18] * ct[197];
  t749 = (ct[229] + ct[11] * ct[197]) + ct[19] * ct[193];
  t750 = (ct[228] + ct[10] * ct[195]) + ct[18] * ct[194];
  t471 = ct[27] + t315;
  t619 = ((ct[47] + -(ct[43] / 1.0E+6)) + ct[103]) + ct[42] * 0.046429;
  t674 = ct[173] + t664;
  t675 = ct[163] + t665;
  t676 = (ct[37] + t473) + t580;
  t686 = ((ct[117] + ct[134]) + -(ct[60] * ct[256] * 0.000281)) +
         ct[15] * ct[60] * 0.011402;
  t698_tmp = ct[5] - ct[26];
  t698 = (ct[85] + t276 * ct[82]) + ct[221] * t698_tmp;
  t701 = ((ct[150] + ct[167]) + ct[82] * ct[256] * 0.000281) +
         -(ct[15] * ct[82] * 0.011402);
  t718 =
      (((ct[135] + ct[153]) + ct[44] * ct[235] * -0.000281) + ct[235] * t433) +
      ct[171];
  t724 = ct[67] * t717;
  t726 = ct[268] * t716;
  t739 = (ct[19] * ct[68] + ct[82] * t381) + -t566 * t698_tmp;
  t743 = (ct[10] * ct[68] + -t381 * t707_tmp) + t299 * t566;
  t807 = (((((t665_tmp + ct[120]) + ct[131]) + ct[132]) + ct[160]) +
          ct[69] * ct[256] * 0.000281) +
         -(ct[15] * ct[69] * 0.011402);
  t809 = (((((t911 + ct[122]) + ct[129]) + ct[133]) + ct[161]) +
          ct[73] * ct[256] * 0.000281) +
         -(ct[15] * ct[73] * 0.011402);
  t830 = (((((((t588 + ct[270]) + ct[279]) + ct[145]) + -(ct[45] * 0.000281)) +
            -(ct[44] * 0.011402)) +
           ct[169]) +
          ct[187]) +
         ct[110] * -0.011402;
  t1004 = ct[0] - ct[62];
  t831 = (ct[60] * t543 + ct[106] * t576) + -t577 * t1004;
  t475 = ct[25] + -t316;
  t587 = ct[157] + t315 * 0.000587;
  t685 = ct[181] * t676;
  t690 = t717_tmp * t676;
  t697 = ((-ct[141] + ct[154]) + t316 * 0.000281) + t315 * 0.011402;
  t704 = (t717_tmp * ct[68] + ct[60] * t381) + -(ct[59] * t566);
  t911 = ct[20] - ct[43] / 2500.0;
  t753 = (ct[162] + t707_tmp * t911) + t299 * t569;
  t811 = ct[163] + t807;
  t812 = ct[173] + t809;
  t837 = ct[181] * t831;
  t839 = t717_tmp * t831;
  t843 = ct[60] * t831;
  t844 = (ct[82] * t543 + t484 * t576) + -(t477 * t577);
  t847 = (ct[60] * t564 + ct[106] * t595) + t593 * t1004;
  t877 = (ct[82] * t564 + t477 * t593) + t484 * t595;
  t381 = ct[268] * t742 + ct[67] * t750;
  t676 = ct[67] * t740 + ct[268] * t749;
  t588 = ct[156] + -(t316 * 0.000369);
  t705 = ct[67] * t704;
  t885 = t724 + -t726;
  t665_tmp = (-ct[165] + ct[82] * t911) + t569 * t698_tmp;
  t566 = ct[67] * t739 + -ct[268] * t665_tmp;
  t913 = ct[268] * t381;
  t914 = ct[67] * t676;
  t966 = (ct[181] * t680 + ct[273] * t740) + -(ct[272] * t749);
  t967 = (ct[181] * t681 + ct[272] * t742) + -(ct[273] * t750);
  t970 = (ct[181] * t698 + ct[273] * t739) + ct[272] * t665_tmp;
  t974 = (t717_tmp * t698 + ct[19] * t739) + -ct[10] * t665_tmp;
  t865_tmp = (-ct[119] + ct[59] * t569) + ct[60] * t911;
  t865 = t705 + -ct[268] * t865_tmp;
  t878 = (-t564 * t707_tmp + t471 * t593) + t475 * t595;
  t909 = ct[67] * t566;
  t911 = ct[67] * t743 + ct[268] * t753;
  t665_tmp = -ct[4] * ct[191];
  t976_tmp = (-ct[83] + t299 * ct[221]) + t276 * t707_tmp;
  t976 = (t665_tmp * t976_tmp + ct[19] * t743) + ct[10] * t753;
  t739 = (ct[60] * t573 + ct[106] * t588) + t587 * t1004;
  t750 = (ct[82] * t573 + t477 * t587) + t484 * t588;
  t876 = (-t573 * t707_tmp + t471 * t587) + t475 * t588;
  t915 = ct[268] * t911;
  t978 = ct[268] * t739 + ct[67] * t847;
  t982 = ct[268] * t876 + ct[67] * t878;
  t740 = ct[268] * t750 + ct[67] * t877;
  ct_idx_1_tmp = (t471 * t577 - t475 * t576) + t543 * t707_tmp;
  ct_idx_1 = (t665_tmp * ct_idx_1_tmp + ct[10] * t876) + ct[19] * t878;
  ct_idx_2 = (t717_tmp * t844 + ct[10] * t750) + ct[19] * t877;
  ct_idx_3 = (ct[60] * t844 + ct[82] * t877) + -t750 * t707_tmp;
  ct_idx_98 = ct[67] * (ct[198] + ct[220]);
  ct_idx_99 = ct[67] * (ct[202] + ct[217]);
  ct_idx_102 = ct[181] * ct[249];
  ct_idx_112 = ct[268] * t681;
  ct_idx_113 = ct[67] * t680;
  ct_idx_126 = ct[67] * t698;
  ct_idx_133_tmp = ((ct[52] + ct[75]) + ct[79]) + ct[126];
  ct_idx_134_tmp = ct[158] + t634;
  ct_idx_136_tmp = ((ct[53] + ct[78]) + ct[80]) + ct[128];
  ct_idx_160 = ct[243] * ct[246] * 0.93;
  ct_idx_163 = -(ct[242] * ct[247] * 0.93);
  ct_idx_164 = t578 * ct[253] * 0.678;
  t665_tmp = ct[67] * ct[158];
  ct_idx_165_tmp =
      ((((((-ct[146] - ct[234]) + ct[30]) + ct[71]) + ct[76]) - ct[77]) +
       ct[102]) +
      t665_tmp;
  ct_idx_165 = t579 * ct_idx_165_tmp * 0.678;
  ct_idx_170 = t581 * t695 * 0.678;
  ct_idx_174 = t583 * t696 * 0.678;
  ct_idx_179 = ct[253] * ct_idx_133_tmp * -0.678;
  ct_idx_180 = ct_idx_136_tmp * ct_idx_165_tmp * 0.678;
  ct_idx_181 = t627 * ct[253] * 0.678;
  ct_idx_182 = t626 * ct_idx_165_tmp * -0.678;
  ct_idx_185_tmp = ct[268] * ((ct[207] + ct[260]) + ct[224]) -
                   ct[67] * ((ct[210] + ct[266]) + ct[225]);
  ct_idx_186_tmp = ct[67] * ((ct[212] + ct[257]) + ct[230]) -
                   ct[268] * ((ct[208] + ct[266]) + ct[227]);
  ct_idx_187 = t615 * t696 * 0.678;
  ct_idx_188 = t619 * t695 * 0.678;
  ct_idx_194 = -(t665 * t695 * 0.678);
  ct_idx_195 = -(t664 * t696 * 0.678);
  ct_idx_197 = t675 * t695 * 0.678;
  ct_idx_200 = t674 * t696 * 0.678;
  ct_idx_205 = ct[67] * t844;
  ct_idx_208_tmp = ((ct[110] * 0.000281 + ct[44] * 0.000281) - t433) +
                   ct[256] * t698_tmp * 0.011402;
  ct_idx_214 = ct[181] * t865;
  ct_idx_216 = t717_tmp * t865;
  ct_idx_222 = t686 * ct[267] / 2.0;
  ct_idx_227 = -(t686 * t799 / 2.0);
  ct_idx_228 = ct[181] * t885;
  ct_idx_229 = t694 * ct[267] / 2.0;
  ct_idx_232 = -(t694 * t799 / 2.0);
  ct_idx_243 = ct[273] * t566;
  ct_idx_244 = ct[273] * t676;
  ct_idx_245 = ct[272] * t381;
  ct_idx_246 = ct[272] * t911;
  ct_idx_247 = ct[19] * t566;
  ct_idx_248 = ct[10] * t911;
  ct_idx_251 = t701 * t809 / 2.0;
  ct_idx_253 = -(t707 * t807 / 2.0);
  ct_idx_255 = -(t701 * t812 / 2.0);
  ct_idx_256 = t707 * t811 / 2.0;
  ct_idx_257 = -(t715 * t807 / 2.0);
  ct_idx_258 = t718 * t809 / 2.0;
  ct_idx_259 = t715 * t811 / 2.0;
  ct_idx_260 = -(t718 * t812 / 2.0);
  ct_idx_261 = t697 * t830 / 2.0;
  t566 =
      ((((((((-ct[146] + ct[276]) - ct[277]) + ct[142]) + ct[143]) + ct[152]) -
         ct[43] * 0.135698) +
        t315 * 0.000281) -
       t316 * 0.011402) +
      t665_tmp;
  ct_idx_262 = -(ct_idx_208_tmp * t566 / 2.0);
  ct_idx_263 = t701 * t566 / 2.0;
  ct_idx_265 = t707 * t830 / 2.0;
  ct_idx_266 = t715 * t830 / 2.0;
  ct_idx_267 = t718 * t566 / 2.0;
  ct_idx_270 = (t685 + ct[273] * t704) + ct[272] * t865_tmp;
  t543 = t809 * t566 / 2.0;
  t576 = -(t807 * t830 / 2.0);
  t564 = t812 * t566 * -0.5;
  t316 = (t690 + ct[19] * t704) + -ct[10] * t865_tmp;
  t749 = t811 * t830 / 2.0;
  t484 = ct[268] * t967;
  t573 = ct[67] * t966;
  t475 = ct[67] * t970;
  t577 = ct[67] * t974;
  t471 = ct[268] * t976;
  t704 = ct[181] * t978;
  ct_idx_289 = t717_tmp * t978;
  ct_idx_290 = ct[60] * t978;
  t742 = ct[268] * t982;
  t569 = ct[67] * t740;
  ct_idx_294 = ct[272] * t982;
  ct_idx_295 = ct[273] * t740;
  ct_idx_296 = ct[10] * t982;
  ct_idx_297 = ct[19] * t740;
  t433 = ct[82] * t740;
  t698_tmp = (t837 + ct[273] * t847) + -(ct[272] * t739);
  t315 = (t839 + ct[10] * t739) + ct[19] * t847;
  t477 = (t843 + ct[82] * t847) + -t739 * t707_tmp;
  t276 = (ct[181] * t844 + ct[273] * t877) + -(ct[272] * t750);
  t588 = ct_idx_2 * ct[67];
  t1004 = ct_idx_1 * ct[268];
  t299 = ct_idx_3 * ct[67];
  t593 = ct[67] * t276;
  t595 = ((((((((((((((((((-ct[258] + -ct[259]) + -(ct[238] * ct[242] * 0.93)) +
                         -(ct[239] * ct[243] * 0.93)) +
                        t626 * ct_idx_136_tmp * -0.678) +
                       t627 * ct_idx_133_tmp * -0.678) +
                      t634 * ct_idx_134_tmp * -0.678) +
                     -ct[268] * ct_idx_185_tmp) +
                    -ct[67] * ct_idx_186_tmp) +
                   -(t665 * t675 * 0.678)) +
                  -(t664 * t674 * 0.678)) +
                 -t909) +
                -t913) +
               -t914) +
              -t915) +
             -(ct[267] * t799 / 2.0)) +
            -(t807 * t811 / 2.0)) +
           -(t809 * t812 / 2.0)) +
          -t742) +
         -t569;
  t665_tmp = ct[67] * 0.010364 + ct[268] * 2.3E-5;
  t676 = ct[67] * 2.3E-5 - ct[268] * 0.010364;
  t381 = ct[88] * 3.5E-5 + ct[275] * 0.208207;
  t587 = ct[16] - ct[93];
  D[0] = (((((((((((((((((ct[33] * 0.00085 + ct[54] * 0.046752) + ct[118]) +
                        t473) +
                       ct[192]) +
                      t580) +
                     t831) +
                    ct[61] * ct[261] * 0.003362) +
                   ct[182] * ct[191]) +
                  ct[181] * ct[186]) +
                 ct_idx_165_tmp * ct_idx_165_tmp * 0.678) +
                t566 * t566 / 2.0) +
               ct[196] * ct[196] * 1.262) +
              ct[199] * ct[199] * 1.262) +
             ct[246] * ct[246] * 0.93) +
            ct[247] * ct[247] * 0.93) +
           ct[253] * ct[253] * 0.678) +
          (((t695 * t695 * 0.678 + t696 * t696 * 0.678) + t830 * t830 / 2.0) +
           t665_tmp * t665_tmp * 1.377)) +
         (t676 * t676 * 1.377 + 0.001409);
  t750 = ct[203] - ct[215];
  t739 = ct[244] + ct[245];
  D[1] = ((((((((((((((t739 + -ct[268] * t750) + ct_idx_99) - t705) - t724) +
                   t726) +
                  ct_idx_160) +
                 ct_idx_163) +
                ct_idx_181) +
               ct_idx_182) +
              ct_idx_197) +
             ct_idx_200) +
            t564) +
           t749) -
          t978) +
         ct[268] * t865_tmp;
  D[2] =
      (((((((((((-ct_idx_99 + ct[265]) + -ct[264]) + ct_idx_179) + ct_idx_180) +
             ct_idx_194) +
            ct_idx_195) +
           t865) +
          t885) +
         t543) +
        t576) +
       t978) +
      ct[268] * t750;
  t750 = (ct_idx_102 + ct[272] * t716) + ct[273] * t717;
  D[3] = (((((((t750 + ct_idx_164) + ct_idx_165) + ct_idx_170) + ct_idx_174) +
            ct_idx_266) +
           ct_idx_267) +
          ct_idx_270) +
         t698_tmp;
  D[4] =
      ((((ct_idx_187 + ct_idx_188) + ct_idx_263) + ct_idx_265) + t316) + t315;
  D[5] = (ct_idx_261 + ct_idx_262) + t477;
  D[6] =
      (((((((((((((((t739 + ct[248]) + ct_idx_98) + ct_idx_112) - ct_idx_113) -
                 ct_idx_126) +
                ct_idx_160) +
               ct_idx_163) +
              ct_idx_181) +
             ct_idx_182) +
            ct_idx_197) +
           ct_idx_200) -
          ct_idx_205) +
         t564) +
        t749) +
       ct[268] * t976_tmp) +
      ct[268] * ct_idx_1_tmp;
  t739 = ((((((ct[268] * ct_idx_185_tmp + ct[67] * ct_idx_186_tmp) + t909) +
             t913) +
            t914) +
           t915) +
          t742) +
         t569;
  D[7] =
      ((((t739 +
          ct[67] * (ct[67] * ((ct[23] * 0.047188 + ct[33] * ct[46] * 0.046752) +
                              ct[46] * ct[54] * 0.00085) -
                    ct[180] * ct[268])) +
         ct[268] *
             (ct[268] * ((ct[46] * 0.047188 + ct[23] * ct[33] * 0.046752) +
                         ct[23] * ct[54] * 0.00085) -
              ct[67] * ct[180])) +
        ct_idx_134_tmp * ct_idx_134_tmp * 0.678) +
       ((((((((((t381 * t381 * 1.262 + ct[183] * ct[183] * 1.262) +
                ct[184] * ct[184] * 1.262) +
               ct[240] * ct[240] * 0.678) +
              ct[241] * ct[241] * 0.93) +
             ct[242] * ct[242] * 0.93) +
            ct[243] * ct[243] * 0.93) +
           t626 * t626 * 0.678) +
          t627 * t627 * 0.678) +
         t674 * t674 * 0.678) +
        t675 * t675 * 0.678)) +
      ((t799 * t799 / 2.0 + t811 * t811 / 2.0) + t812 * t812 / 2.0);
  D[8] = t595;
  t749 = (-(ct[273] * t743) + ct[272] * t753) + ct[181] * t976_tmp;
  t742 = (ct[272] * t876 - ct[273] * t878) + ct[181] * ct_idx_1_tmp;
  t740 =
      ((((ct[254] + ct[219] * ct_idx_134_tmp * 0.678) + t578 * t627 * 0.678) +
        -(t579 * t626 * 0.678)) +
       t581 * t675 * 0.678) +
      t583 * t674 * 0.678;
  D[9] =
      ((((((((t740 + ct_idx_232) + ct_idx_259) + ct_idx_260) + t484) - t573) -
         t475) -
        t593) +
       ct[268] * t749) +
      ct[268] * t742;
  t566 = (t584 * ct_idx_134_tmp * -0.678 + t615 * t674 * 0.678) +
         t619 * t675 * 0.678;
  D[10] = ((((((t566 + ct_idx_227) + ct_idx_255) + ct_idx_256) - t577) - t471) -
           t588) -
          t1004;
  t381 = (-(ct[82] * t878) + t876 * t707_tmp) + ct[60] * ct_idx_1_tmp;
  t676 =
      (-(t677 * t799 / 2.0) + t697 * t811 / 2.0) + t812 * ct_idx_208_tmp / 2.0;
  D[11] = (t676 - t299) + ct[268] * t381;
  D[12] = ((((((((((((((-ct_idx_98 - ct_idx_112) + ct_idx_113) + ct_idx_126) +
                     -ct[268] * t976_tmp) +
                    ct[265]) +
                   -ct[264]) +
                  ct_idx_179) +
                 ct_idx_180) +
                ct_idx_194) +
               ct_idx_195) +
              -ct[268] * ct_idx_1_tmp) +
             ct_idx_205) +
            t543) +
           t576) +
          ct[268] * (ct[201] - ct[216]);
  D[13] = t595;
  D[14] = (((((((((((t739 + ct_idx_133_tmp * ct_idx_133_tmp * 0.678) +
                    ct_idx_136_tmp * ct_idx_136_tmp * 0.678) +
                   ct[236] * ct[236] * 0.678) +
                  ct[237] * ct[237] * 0.93) +
                 ct[238] * ct[238] * 0.93) +
                ct[239] * ct[239] * 0.93) +
               t634 * t634 * 0.678) +
              t664 * t664 * 0.678) +
             t665 * t665 * 0.678) +
            ct[267] * ct[267] / 2.0) +
           t807 * t807 / 2.0) +
          t809 * t809 / 2.0;
  t739 = ((((ct[252] + -(ct[219] * t634 * 0.678)) +
            t578 * ct_idx_133_tmp * -0.678) +
           t579 * ct_idx_136_tmp * 0.678) +
          -(t581 * t665 * 0.678)) +
         -(t583 * t664 * 0.678);
  D[15] =
      ((((((((t739 + ct_idx_229) + ct_idx_257) + ct_idx_258) - t484) + t573) +
         t475) +
        -ct[268] * t749) +
       t593) +
      -ct[268] * t742;
  t911 =
      (t584 * t634 * 0.678 + -(t615 * t664 * 0.678)) + -(t619 * t665 * 0.678);
  D[16] = ((((((t911 + ct_idx_222) + ct_idx_251) + ct_idx_253) + t577) + t471) +
           t588) +
          t1004;
  t665_tmp = (t677 * ct[267] / 2.0 + -(t697 * t807 / 2.0)) +
             t809 * ct_idx_208_tmp * -0.5;
  D[17] = (t665_tmp + t299) + -ct[268] * t381;
  D[18] = (((((((((((((ct_idx_102 + t685) + ct_idx_164) + ct_idx_165) +
                    ct_idx_170) +
                   ct_idx_174) +
                  t837) +
                 ct_idx_266) +
                ct_idx_267) +
               t681 * ct[272]) +
              t680 * ct[273]) +
             t698 * ct[273]) +
            t844 * ct[273]) +
           ct[272] * t976_tmp) +
          ct[272] * ct_idx_1_tmp;
  D[19] =
      (((((((((((t740 - ct_idx_214) - ct_idx_228) + ct_idx_232) - ct_idx_243) -
             ct_idx_244) +
            ct_idx_245) +
           ct_idx_246) +
          ct_idx_259) +
         ct_idx_260) -
        t704) +
       ct_idx_294) -
      ct_idx_295;
  D[20] =
      (((((((((((t739 + ct_idx_214) + ct_idx_228) + ct_idx_229) + ct_idx_243) +
             ct_idx_244) -
            ct_idx_245) -
           ct_idx_246) +
          ct_idx_257) +
         ct_idx_258) +
        t704) -
       ct_idx_294) +
      ct_idx_295;
  D[21] = ((((((((((((((((t587 * t587 * 0.678 + ct[181] * ct_idx_270) +
                         ct[181] * t698_tmp) +
                        ct[272] * t967) +
                       ct[273] * t966) +
                      ct[273] * t970) +
                     ct[273] * t276) +
                    ct[272] * t749) +
                   ct[272] * t742) +
                  ct[181] * t750) +
                 ct[219] * ct[219] * 0.678) +
                t578 * t578 * 0.678) +
               t579 * t579 * 0.678) +
              t581 * t581 * 0.678) +
             t583 * t583 * 0.678) +
            t694 * t694 / 2.0) +
           t715 * t715 / 2.0) +
          t718 * t718 / 2.0;
  t750 = ((((-(ct[219] * t584 * 0.678) + t581 * t619 * 0.678) +
            t583 * t615 * 0.678) +
           t686 * t694 / 2.0) +
          t701 * t718 / 2.0) +
         t707 * t715 / 2.0;
  D[22] = (((((t750 + ct[181] * t316) + ct[181] * t315) - ct[272] * t976) +
            ct[273] * t974) -
           ct_idx_1 * ct[272]) +
          ct_idx_2 * ct[273];
  t739 = (t677 * t694 / 2.0 + t697 * t715 / 2.0) + t718 * ct_idx_208_tmp * -0.5;
  D[23] = ((t739 + ct[181] * t477) + ct_idx_3 * ct[273]) + ct[272] * t381;
  D[24] = ((((((((t690 + ct_idx_187) + ct_idx_188) + t839) + ct_idx_263) +
              ct_idx_265) +
             ct[19] * t698) +
            ct[19] * t844) -
           ct[10] * t976_tmp) -
          ct[10] * ct_idx_1_tmp;
  D[25] = ((((((((t566 - ct_idx_216) + ct_idx_227) - ct_idx_247) - ct_idx_248) +
              ct_idx_255) +
             ct_idx_256) -
            ct_idx_289) -
           ct_idx_296) -
          ct_idx_297;
  D[26] = ((((((((t911 + ct_idx_216) + ct_idx_222) + ct_idx_247) + ct_idx_248) +
              ct_idx_251) +
             ct_idx_253) +
            ct_idx_289) +
           ct_idx_296) +
          ct_idx_297;
  D[27] = (((((t750 + ct[19] * t970) + ct[19] * t276) - ct[10] * t749) -
            ct[10] * t742) +
           t717_tmp * ct_idx_270) +
          t717_tmp * t698_tmp;
  D[28] = ((((((((((ct[10] * t976 + ct[19] * t974) + ct_idx_1 * ct[10]) +
                  ct_idx_2 * ct[19]) +
                 t584 * t584 * 0.678) +
                t615 * t615 * 0.678) +
               t619 * t619 * 0.678) +
              t686 * t686 / 2.0) +
             t701 * t701 / 2.0) +
            t707 * t707 / 2.0) +
           t717_tmp * t316) +
          t717_tmp * t315;
  t750 = (t677 * t686 / 2.0 + t701 * ct_idx_208_tmp * -0.5) + t697 * t707 / 2.0;
  D[29] = ((t750 + ct_idx_3 * ct[19]) - ct[10] * t381) + t717_tmp * t477;
  D[30] = (((t843 + ct_idx_261) + ct_idx_262) + t707_tmp * ct_idx_1_tmp) +
          ct[82] * t844;
  D[31] = ((t676 - ct_idx_290) - t433) + t982 * t707_tmp;
  D[32] = ((t665_tmp + ct_idx_290) + t433) + -t982 * t707_tmp;
  D[33] = ((t739 + ct[60] * t698_tmp) + ct[82] * t276) + t707_tmp * t742;
  D[34] = ((t750 + ct[60] * t315) + ct_idx_2 * ct[82]) - ct_idx_1 * t707_tmp;
  D[35] = ((((ct[60] * t477 + ct_idx_3 * ct[82]) +
             ct_idx_208_tmp * ct_idx_208_tmp / 2.0) +
            t707_tmp * t381) +
           t677 * t677 / 2.0) +
          t697 * t697 / 2.0;
}

void Mq_s(double th1, double th2, double th3, double th4, double th5,
          double th6, double D[36])
{
  double b_t104[280];
  double t10;
  double t100;
  double t101;
  double t102;
  double t103;
  double t103_tmp;
  double t104;
  double t104_tmp;
  double t108;
  double t109;
  double t11;
  double t110;
  double t112;
  double t12;
  double t122;
  double t123;
  double t124;
  double t13;
  double t130;
  double t130_tmp;
  double t131;
  double t132;
  double t133;
  double t14;
  double t141;
  double t142;
  double t143;
  double t144;
  double t147;
  double t15;
  double t17;
  double t18;
  double t186;
  double t19;
  double t190;
  double t191;
  double t2;
  double t20;
  double t204;
  double t21;
  double t215;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t27;
  double t279;
  double t28;
  double t286;
  double t29;
  double t297;
  double t297_tmp;
  double t3;
  double t30;
  double t307;
  double t307_tmp;
  double t31;
  double t312;
  double t33;
  double t330;
  double t34;
  double t35;
  double t358;
  double t36;
  double t360;
  double t38;
  double t39;
  double t393;
  double t4;
  double t43;
  double t44;
  double t45;
  double t47;
  double t474;
  double t476;
  double t478;
  double t479;
  double t48;
  double t480;
  double t481;
  double t482;
  double t493;
  double t494;
  double t5;
  double t504;
  double t505;
  double t51;
  double t510;
  double t512;
  double t513;
  double t516;
  double t519;
  double t520;
  double t524;
  double t537;
  double t6;
  double t601;
  double t602;
  double t610;
  double t612;
  double t613;
  double t614;
  double t628;
  double t629;
  double t64;
  double t65;
  double t66;
  double t67;
  double t7;
  double t72;
  double t73;
  double t76;
  double t8;
  double t80;
  double t81;
  double t86;
  double t88;
  double t9;
  double t90;
  double t94;
  double t95;
  double t96;
  double t97;
  double t98;
  // MQ_S
  //     D = MQ_S(TH1,TH2,TH3,TH4,TH5,TH6)
  //     This function was generated by the Symbolic Math Toolbox version 8.7.
  //     02-Dec-2021 02:03:15
  t2 = std::cos(th1);
  t3 = std::cos(th2);
  t4 = std::cos(th3);
  t5 = std::cos(th4);
  t6 = std::cos(th5);
  t7 = std::cos(th6);
  t8 = std::sin(th1);
  t9 = std::sin(th2);
  t10 = std::sin(th3);
  t11 = std::sin(th4);
  t12 = std::sin(th5);
  t13 = std::sin(th6);
  t14 = t2 * t2;
  t15 = t3 * t3;
  t17 = t8 * t8;
  t18 = t9 * t9;
  t19 = t11 * t11;
  t20 = t2 * t5;
  t21 = t3 * t4;
  t22 = t2 * t11;
  t23 = t3 * t10;
  t24 = t4 * t9;
  t25 = t5 * t8;
  t26 = t8 * t11;
  t27 = t9 * t10;
  t38 = t2 / 1000.0;
  t39 = t9 * 0.41;
  t131 = t2 * t3;
  t43 = t131 * 0.41;
  t4 = t3 * t8;
  t45 = t4 * 0.41;
  t10 = t8 * t9;
  t48 = t10 * -0.41;
  t28 = t2 * t27;
  t29 = t8 * t23;
  t30 = t8 * t24;
  t31 = t8 * t27;
  t33 = t2 * t21;
  t34 = t2 * t23;
  t35 = t2 * t24;
  t36 = t8 * t21;
  t44 = t2 * t39;
  t47 = t21 + t27;
  t66 = t23 * 0.3143;
  t67 = t24 * 0.3143;
  t215 = t25 * 0.008466;
  t516 = (t2 * 0.02429 + t10 * 0.208207) + t4 * 3.5E-5;
  t51 = t23 + -t24;
  t64 = t6 * t47;
  t65 = t12 * t47;
  t72 = t28 + t33;
  t73 = t31 + t36;
  t90 = t34 * 0.3143;
  t147 = t11 * t47;
  t122 = t147 * 0.008704;
  t279 = t34 * 0.271337;
  t476 = t21 * 0.000389 + t27 * 0.000389;
  t478 = t4 * 0.208207 + -(t10 * 3.5E-5);
  t4 = t2 * t9;
  t479 = t131 * 0.208207 + -(t4 * 3.5E-5);
  t481 = t21 * 0.000628 + t27 * 0.000628;
  t519 = (-(t8 * 0.02429) + t4 * 0.208207) + t131 * 3.5E-5;
  t76 = t51 * t51;
  t80 = t5 * t64;
  t81 = t12 * t51;
  t86 = t34 + t2 * -t24;
  t88 = t29 + -t30;
  t94 = t5 * t72;
  t95 = t11 * t72;
  t96 = t12 * t72;
  t97 = t5 * t73;
  t98 = t5 * t6 * t51;
  t100 = t11 * t73;
  t101 = t12 * t73;
  t103_tmp = t7 * t11;
  t103 = t103_tmp * t51;
  t104_tmp = t11 * t13;
  t104 = t104_tmp * t51;
  t130_tmp = t11 * t51;
  t130 = t130_tmp / 1.0E+6;
  t286 = t65 * 0.046429;
  t297_tmp = t6 * t51;
  t297 = t297_tmp * 0.046429;
  t307_tmp = t5 * t51;
  t307 = t307_tmp * 0.008466;
  t358 = t65 * 0.135698;
  t474 = t23 * 0.008292 + -(t24 * 0.008292);
  t480 = t33 * 0.008292 + t28 * 0.008292;
  t482 = t36 * 0.008292 + t31 * 0.008292;
  t510 = t47 * t476;
  t601 = ((t5 * t47 / 1.0E+6 + t23 * 0.271337) + -(t24 * 0.271337)) +
         t147 * 0.008466;
  t602 = ((t24 * 0.076168 + -(t23 * 0.076168)) + t21 * 1.8E-5) + t27 * 1.8E-5;
  t102 = t5 * t81;
  t108 = t6 * t86;
  t109 = t12 * t86;
  t110 = t6 * t88;
  t112 = t12 * t88;
  t123 = t25 + t95;
  t124 = t22 + t97;
  t10 = t80 / 1.0E+6;
  t131 = t81 / 1.0E+6;
  t147 = t94 / 1.0E+6;
  t186 = t65 + t98;
  t312 = t103 * 0.000281;
  t330 = t95 * 0.008466;
  t360 = t5 * t5 * t76 * 0.001645;
  t493 = t34 * 0.000389 + -(t35 * 0.000389);
  t494 = t29 * 0.000389 + -(t30 * 0.000389);
  t504 = t34 * 0.000628 + -(t35 * 0.000628);
  t505 = t29 * 0.000628 + -(t30 * 0.000628);
  t520 = t72 * t474;
  t524 = t51 * t480;
  t537 = t86 * t481;
  t610 = ((t28 * 0.076168 + t33 * 0.076168) + t34 * 1.8E-5) + -(t35 * 1.8E-5);
  t612 = ((t31 * 0.076168 + t36 * 0.076168) + t29 * 1.8E-5) + -(t30 * 1.8E-5);
  t613 = -t39 + t601;
  t614 = t39 + t602;
  t628 = ((((t44 + t8 * 0.00857) + t35 * 0.076168) + -(t34 * 0.076168)) +
          t33 * 1.8E-5) +
         t28 * 1.8E-5;
  t629 =
      ((((t8 * t39 + -(t2 * 0.00857)) + t30 * 0.076168) + -(t29 * 0.076168)) +
       t36 * 1.8E-5) +
      t31 * 1.8E-5;
  t27 = t5 * t108;
  t24 = t5 * t110;
  t132 = t26 + -t94;
  t133 = t20 + -t100;
  t4 = t108 / 2500.0;
  t141 = t7 * t123;
  t142 = t6 * t124;
  t143 = t13 * t123;
  t144 = t12 * t124;
  t190 = t7 * t186;
  t191 = t13 * t186;
  t204 = t25 * 0.001696 + t95 * 0.001696;
  t393 = t108 * 0.135698;
  t512 = t25 * 0.001666 + t95 * 0.001666;
  t513 = t22 * 0.001645 + t97 * 0.001645;
  b_t104[0] = t104;
  b_t104[1] = -t90;
  b_t104[2] = t108;
  b_t104[3] = t109;
  b_t104[4] = t11;
  b_t104[5] = t112;
  b_t104[6] = t64 / 2500.0;
  b_t104[7] = -t108;
  b_t104[8] = t64 / 1.0E+6;
  b_t104[9] = t122;
  b_t104[10] = t123;
  b_t104[11] = t124;
  b_t104[12] = -t122;
  b_t104[13] = t10;
  b_t104[14] = -(t102 / 2500.0);
  b_t104[15] = t13;
  b_t104[16] = t130;
  b_t104[17] = t131;
  b_t104[18] = t132;
  b_t104[19] = t133;
  b_t104[20] = t4;
  b_t104[21] = t110 / 2500.0;
  b_t104[22] = -t10;
  b_t104[23] = t14;
  b_t104[24] = -t131;
  b_t104[25] = t141;
  b_t104[26] = t142;
  b_t104[27] = t143;
  b_t104[28] = -t4;
  b_t104[29] = t94 * 0.008704;
  b_t104[30] = t147;
  b_t104[31] = t95 * 0.008704;
  b_t104[32] = t95 / 1.0E+6;
  b_t104[33] = t15;
  b_t104[34] = t97 * 0.008704;
  b_t104[35] = -t147;
  b_t104[36] = -(t96 / 1.0E+6);
  t21 = t19 * t76;
  b_t104[37] = t21 * 0.001696;
  b_t104[38] = -(t100 * 0.008704);
  b_t104[39] = -(t100 / 1.0E+6);
  b_t104[40] = -(t101 / 1.0E+6);
  b_t104[41] = -(t102 / 1.0E+6);
  b_t104[42] = t6 * t132;
  b_t104[43] = t12 * t132;
  b_t104[44] = t7 * t133;
  b_t104[45] = t13 * t133;
  b_t104[46] = t17;
  b_t104[47] = t108 / 1.0E+6;
  t23 = t11 * t86;
  b_t104[48] = t23 * 0.008704;
  b_t104[49] = t109 / 1.0E+6;
  b_t104[50] = t110 / 1.0E+6;
  t34 = t11 * t88;
  b_t104[51] = t34 * 0.008704;
  b_t104[52] = -(t5 * t86 / 1.0E+6);
  b_t104[53] = -(t5 * t88 / 1.0E+6);
  b_t104[54] = t18;
  b_t104[55] = -(t112 / 1.0E+6);
  b_t104[56] = t27 / 1.0E+6;
  b_t104[57] = t24 / 1.0E+6;
  b_t104[58] = t144 / 2500.0;
  b_t104[59] = t186;
  b_t104[60] = t64 + -t102;
  b_t104[61] = t19;
  b_t104[62] = t190;
  b_t104[63] = t6 * t123 / 1.0E+6;
  b_t104[64] = t142 / 1.0E+6;
  b_t104[65] = t144 / 1.0E+6;
  b_t104[66] = t6 * t133 / 1.0E+6;
  b_t104[67] = t2;
  b_t104[68] = t20 * 0.001696 + -(t100 * 0.001696);
  b_t104[69] = t96 + t27;
  b_t104[70] = t22 * 0.008466;
  b_t104[71] = t215;
  b_t104[72] = t26 * 0.008466;
  b_t104[73] = t101 + t24;
  b_t104[74] = -t215;
  b_t104[75] = t33 * 0.271337;
  b_t104[76] = t279;
  b_t104[77] = t35 * 0.271337;
  b_t104[78] = t36 * 0.271337;
  b_t104[79] = t28 * 0.271337;
  b_t104[80] = t31 * 0.271337;
  b_t104[81] = t286;
  b_t104[82] = t110 + t144;
  t24 = t130_tmp * t123;
  b_t104[83] = t24 * 0.001696;
  b_t104[84] = -t279;
  t27 = t130_tmp * t133;
  b_t104[85] = t27 * 0.001696;
  b_t104[86] = t5 * t286;
  b_t104[87] = t297;
  b_t104[88] = t3;
  b_t104[89] = t64 * 0.000609;
  b_t104[90] = t5 * t65 * -0.046429;
  b_t104[91] = -t297;
  b_t104[92] = t98 * 0.046429;
  b_t104[93] = t307;
  b_t104[94] = t5 * t13 * t51 * 0.000281;
  b_t104[95] = t312;
  t10 = t6 * t72;
  b_t104[96] = t10 * 0.046429;
  t131 = t6 * t73;
  b_t104[97] = t131 * 0.046429;
  t147 = t112 - t142;
  b_t104[98] = -t7 * t147;
  b_t104[99] = t112 * 0.046429;
  b_t104[100] = t6 * t312;
  b_t104[101] = t5 * t7 * t51 * 0.011402;
  b_t104[102] = t330;
  b_t104[103] = t109 * 0.046429;
  b_t104[104] = t97 * 0.008466;
  b_t104[105] = t110 * 0.046429;
  b_t104[106] = t103 + t191;
  b_t104[107] = -(t104 * 0.011402);
  b_t104[108] = -(t102 * 0.000609);
  b_t104[109] = t103 * 0.000369;
  b_t104[110] = t13 * t147;
  b_t104[111] = -(t94 * 0.008466);
  b_t104[112] = -(t108 * 0.046429);
  b_t104[113] = -t330;
  b_t104[114] = t110 * 0.000609;
  b_t104[115] = t109 * 0.001685;
  b_t104[116] = -(t104 * 0.000587);
  b_t104[117] = t358;
  b_t104[118] = t360;
  b_t104[119] = t130_tmp * t204;
  b_t104[120] = -(t104_tmp * t86 * 0.000281);
  b_t104[121] = t6 * t104 * -0.011402;
  b_t104[122] = -(t104_tmp * t88 * 0.000281);
  b_t104[123] = -(t108 * 0.000609);
  b_t104[124] = -(t112 * 0.001685);
  t4 = t5 * t109;
  b_t104[125] = t4 * -0.046429;
  b_t104[126] = -(t23 * 0.008466);
  t23 = t5 * t112;
  b_t104[127] = t23 * -0.046429;
  b_t104[128] = -(t34 * 0.008466);
  b_t104[129] = -(t103_tmp * t88 * 0.011402);
  b_t104[130] = t38;
  b_t104[131] = -(t103_tmp * t86 * 0.011402);
  b_t104[132] = t10 * 0.135698;
  b_t104[133] = t131 * 0.135698;
  b_t104[134] = t98 * 0.135698;
  b_t104[135] = t13 * t124 * 0.000281;
  b_t104[136] = t142 * 0.046429;
  t34 = t12 * t123;
  b_t104[137] = t34 * 0.046429;
  t10 = t11 * t81;
  b_t104[138] = -(t10 * 0.135698);
  b_t104[139] = t39;
  b_t104[140] = t144 * 0.046429;
  b_t104[141] = t141 * 0.000281;
  b_t104[142] = t143 * 0.000281;
  b_t104[143] = t393;
  b_t104[144] = t109 * 0.135698;
  b_t104[145] = t110 * 0.135698;
  b_t104[146] = t8 / 1000.0;
  b_t104[147] = t144 * 0.000609;
  b_t104[148] = t142 * 0.001685;
  b_t104[149] = -t393;
  b_t104[150] = -(t112 * 0.135698);
  t131 = t12 * t133;
  b_t104[151] = t131 * 0.046429;
  b_t104[152] = t141 * 0.011402;
  b_t104[153] = t7 * t124 * 0.011402;
  b_t104[154] = t143 * 0.011402;
  b_t104[155] = t13 * t132 * 0.000281;
  b_t104[156] = t141 * 0.000369;
  b_t104[157] = t143 * 0.000587;
  b_t104[158] = -t39;
  b_t104[159] = t6 * t141 * -0.000281;
  b_t104[160] = t4 * -0.135698;
  b_t104[161] = t23 * -0.135698;
  b_t104[162] = t123 * t204;
  b_t104[163] = t43;
  b_t104[164] = t7 * t132 * 0.011402;
  b_t104[165] = t133 * t204;
  b_t104[166] = t44;
  b_t104[167] = t142 * 0.135698;
  b_t104[168] = t34 * 0.135698;
  b_t104[169] = t144 * 0.135698;
  b_t104[170] = t191 * 0.000281;
  b_t104[171] = t131 * 0.135698;
  b_t104[172] = t190 * 0.011402;
  b_t104[173] = t45;
  b_t104[174] = t190 * 0.000587;
  b_t104[175] = t191 * 0.000369;
  b_t104[176] = -(t307_tmp * t124 * 0.001645);
  b_t104[177] = -(t24 * 0.001666);
  b_t104[178] = t307_tmp * t132 * 0.001645;
  b_t104[179] = t27 * 0.001666;
  t23 = t2 * t8;
  b_t104[180] =
      (t23 * t18 * 0.00085 + t23 * t15 * 0.046752) + -(t23 * 0.047188);
  b_t104[181] = t47;
  b_t104[182] = t474;
  b_t104[183] = t478;
  b_t104[184] = t479;
  b_t104[185] = t48;
  b_t104[186] = t481;
  t34 = t7 * t147;
  b_t104[187] = t34 * 0.000281;
  b_t104[188] = t34 * -0.011402;
  b_t104[189] = t5;
  b_t104[190] = t34 * -0.000587;
  b_t104[191] = t51;
  b_t104[192] = t510;
  b_t104[193] = t512;
  b_t104[194] = t513;
  b_t104[195] = t20 * 0.001666 + -(t100 * 0.001666);
  b_t104[196] = t516;
  b_t104[197] = t26 * 0.001645 + -(t94 * 0.001645);
  b_t104[198] = t73 * t474;
  b_t104[199] = t519;
  b_t104[200] = t20 * 0.008704;
  b_t104[201] = t520;
  b_t104[202] = t51 * t482;
  b_t104[203] = t524;
  b_t104[204] = t47 * t493;
  b_t104[205] = t47 * t494;
  b_t104[206] = -t520;
  b_t104[207] = t72 * t480;
  b_t104[208] = t73 * t480;
  b_t104[209] = t20 / 1.0E+6;
  b_t104[210] = t72 * t482;
  b_t104[211] = t86 * t476;
  b_t104[212] = t73 * t482;
  b_t104[213] = t88 * t476;
  b_t104[214] = -t524;
  b_t104[215] = t47 * t504;
  b_t104[216] = t537;
  b_t104[217] = -(t47 * t505);
  b_t104[218] = t22 * 0.008704;
  b_t104[219] = (t307_tmp * 0.008704 + t6 * t130) + t10 * 0.046429;
  b_t104[220] = -(t88 * t481);
  b_t104[221] = t65 * 0.001685 + t98 * 0.001685;
  b_t104[222] = t86 * t493;
  b_t104[223] = t88 * t494;
  b_t104[224] = t86 * t504;
  b_t104[225] = t86 * t505;
  b_t104[226] = t25 * 0.008704;
  b_t104[227] = t88 * t504;
  b_t104[228] = -(t86 * t494);
  b_t104[229] = -(t88 * t493);
  b_t104[230] = t88 * t505;
  b_t104[231] = t307_tmp * t513;
  b_t104[232] = t130_tmp * t512;
  b_t104[233] = t25 / 1.0E+6;
  b_t104[234] = t26 / 1.0E+6;
  b_t104[235] = t6;
  b_t104[236] = t601;
  b_t104[237] = t602;
  b_t104[238] = t610;
  b_t104[239] = t612;
  b_t104[240] = t613;
  b_t104[241] = t614;
  b_t104[242] = t43 + t610;
  b_t104[243] = t45 + t612;
  b_t104[244] = -(t479 * t516 * 1.262);
  b_t104[245] = t478 * t519 * 1.262;
  b_t104[246] = t628;
  b_t104[247] = t629;
  b_t104[248] = -t8 * (t520 - t537);
  b_t104[249] = (t21 * 0.001666 + t360) + t510;
  b_t104[250] = t66;
  b_t104[251] = t67;
  t21 = t130 - t307;
  b_t104[252] = t601 * t21 * -0.678;
  b_t104[253] =
      ((((((t38 + t48) + t22 / 1.0E+6) + t97 / 1.0E+6) + -(t20 * 0.008466)) +
        t29 * 0.271337) +
       -(t30 * 0.271337)) +
      t100 * 0.008466;
  b_t104[254] = t613 * t21 * 0.678;
  b_t104[255] = -(t26 * 0.008704);
  b_t104[256] = t7;
  b_t104[257] = t14 * 0.008464;
  b_t104[258] = t601 * t613 * 0.678;
  b_t104[259] = t602 * t614 * 0.93;
  b_t104[260] = t17 * 0.008464;
  b_t104[261] = t76;
  b_t104[262] = -t66;
  b_t104[263] = -t67;
  b_t104[264] = t612 * t628 * 0.93;
  b_t104[265] = t610 * t629 * 0.93;
  b_t104[266] = -(t23 * 0.008464);
  t21 = t80 - t81;
  b_t104[267] = ((((((t66 + -t67) + t104_tmp * t47 * 0.000281) +
                    t103_tmp * t47 * 0.011402) +
                   t5 * t358) +
                  t297_tmp * 0.135698) +
                 t7 * t21 * -0.000281) +
                t13 * t21 * 0.011402;
  b_t104[268] = t8;
  b_t104[269] = t28 * 0.3143;
  b_t104[270] = t29 * 0.3143;
  b_t104[271] = t31 * 0.3143;
  b_t104[272] = t86;
  b_t104[273] = t88;
  b_t104[274] = t33 * 0.3143;
  b_t104[275] = t9;
  b_t104[276] = t90;
  b_t104[277] = t35 * 0.3143;
  b_t104[278] = t36 * 0.3143;
  b_t104[279] = -(t30 * 0.3143);
  ft_1(b_t104, D);
}

// End of code generation (Mq_s.cpp)
